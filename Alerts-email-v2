function sendDailyTaskReminder() { 
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheets()[0];
  var data = sheet.getDataRange().getValues();
  var today = new Date();
  var tomorrow = new Date(today);
  tomorrow.setDate(today.getDate() + 1);

  var todayFormatted = Utilities.formatDate(today, Session.getScriptTimeZone(), "yyyy-MM-dd");
  var tomorrowFormatted = Utilities.formatDate(tomorrow, Session.getScriptTimeZone(), "yyyy-MM-dd");
  var message = '';

  var hasTodayTasks = false;
  var hasTomorrowTasks = false;
  var hasDueTasks = false;

  // Tareas para hoy
  message += '‚è∞Tareas para hoy (' + todayFormatted + '):\n';
  message += '<ul>';

  for (var i = 1; i < data.length; i++) {
    var deadline = new Date(data[i][7]); // √çndice de la columna "Deadline" (Start Date)
    var deadlineFormatted = Utilities.formatDate(deadline, Session.getScriptTimeZone(), "yyyy-MM-dd");
    var description = data[i][1]; // √çndice de la columna "Descripci√≥n del problema"
    
    // Si la tarea es para hoy
    if (deadlineFormatted === todayFormatted) {
      message += '<li>' + description + ' - Fecha l√≠mite: ' + deadlineFormatted + '</li>';
      hasTodayTasks = true; // Marcamos que hay tareas para hoy
    }
  }
  message += '</ul>';

  // Tareas para ma√±ana
  message += '\n‚úèÔ∏èTareas para ma√±ana (' + tomorrowFormatted + '):\n';
  message += '<ul>';

  for (var i = 1; i < data.length; i++) {
    var deadline = new Date(data[i][7]); // "Start Date"
    var deadlineFormatted = Utilities.formatDate(deadline, Session.getScriptTimeZone(), "yyyy-MM-dd");
    var description = data[i][1];

    // Si la tarea es para ma√±ana
    if (deadlineFormatted === tomorrowFormatted) {
      message += '<li>' + description + ' - Fecha l√≠mite: ' + deadlineFormatted + '</li>';
      hasTomorrowTasks = true; // Marcamos que hay tareas para ma√±ana
    }
  }
  message += '</ul>';

  // Tareas con fecha l√≠mite (Finish Date)
  message += '\nüö®Tareas con fecha l√≠mite ma√±ana (' + tomorrowFormatted + '):\n';
  message += '<ul>';

  for (var i = 1; i < data.length; i++) {
    var finishDate = new Date(data[i][8]); // √çndice de la columna "Finish Date"
    var finishDateFormatted = Utilities.formatDate(finishDate, Session.getScriptTimeZone(), "yyyy-MM-dd");
    var description = data[i][1];

    // Si la fecha de "Finish Date" es ma√±ana
    if (finishDateFormatted === tomorrowFormatted) {
      message += '<li>' + description + ' - Fecha de finalizaci√≥n: ' + finishDateFormatted + '</li>';
      hasDueTasks = true;
    }
  }
  message += '</ul>';

  // Enlace al Google Sheet
  var sheetUrl = SpreadsheetApp.getActiveSpreadsheet().getUrl();
  message += '<p>Para ver el documento original, haz clic <a href="' + sheetUrl + '">aqu√≠</a>.</p>';

  // Si hay tareas para hoy, ma√±ana o con fecha l√≠mite, enviar el email
  if (hasTodayTasks || hasTomorrowTasks || hasDueTasks) {
    MailApp.sendEmail({
      to: 'francisco.fernandez@isdin.com',  // Cambia a tu email  
      subject: 'Tareas para hoy, ma√±ana y con fecha l√≠mite',
      htmlBody: message
    });
  }
}
